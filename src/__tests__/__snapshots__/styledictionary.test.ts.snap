// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`android styledictionary can build platform android 1`] = `
"/**
 * ⚠️ DO NOT MODIFY ⚠️
 * this file is auto generated using elements-design-tokens
 *
 * See https://github.com/elementsinteractive/design-tokens for more info
 */
package nl.elements.designsystem.light

import androidx.compose.ui.graphics.Color
import nl.elements.designsystem.ColorTokens

object LightColors : ColorTokens {
    override val primary: Color = Color(0xffffffff)
    override val background: Color = Color(0xfff4f4f4)
    override val primaryVariant: Color = Color(0xff000000)
    override val secondary: Color = Color(0xffff495b)
    override val secondaryVariant: Color = Color(0xfff4f4f4)
    override val surface: Color = Color(0xffffffff)
    override val onPrimary: Color = Color(0xffffffff)
    override val onSecondary: Color = Color(0xff000000)
    override val onBackground: Color = Color(0xff000000)
    override val onSurface: Color = Color(0xff000000)
    override val purple: Color = Color(0xff5048da)
    override val white: Color = Color(0xffffffff)
    override val pink: Color = Color(0xffff495b)
    override val black: Color = Color(0xff000000)
    override val lightGray: Color = Color(0xfff4f4f4)
}
"
`;

exports[`android styledictionary can build platform android 2`] = `
"/**
 * ⚠️ DO NOT MODIFY ⚠️
 * this file is auto generated using elements-design-tokens
 *
 * See https://github.com/elementsinteractive/design-tokens for more info
 */
package [object Object]

import androidx.compose.ui.graphics.Color

interface ColorTokens {
    val primary: Color
    
    val background: Color
    
    val primaryVariant: Color
    
    val secondary: Color
    
    val secondaryVariant: Color
    
    val surface: Color
    
    val onPrimary: Color
    
    val onSecondary: Color
    
    val onBackground: Color
    
    val onSurface: Color
    
    val purple: Color
    
    val white: Color
    
    val pink: Color
    
    val black: Color
    
    val lightGray: Color
    
}
"
`;

exports[`android styledictionary can build platform android 3`] = `
"/**
 * ⚠️ DO NOT MODIFY ⚠️
 * this file is auto generated using elements-design-tokens
 *
 * See https://github.com/elementsinteractive/design-tokens for more info
 */
package nl.elements.designsystem

object Spacings : SpacingTokens {
  override val xxxs = 4
  override val xxs = 8
  override val xs = 12
  override val s = 16
  override val m = 24
  override val l = 32
  override val xl = 48
  override val xxl = 200
}"
`;

exports[`android styledictionary can build platform android 4`] = `
"/**
 * ⚠️ DO NOT MODIFY ⚠️
 * this file is auto generated using elements-design-tokens
 *
 * See https://github.com/elementsinteractive/design-tokens for more info
 */
package nl.elements.designsystem

interface SpacingTokens {
    val xxxs: Int
    val xxs: Int
    val xs: Int
    val s: Int
    val m: Int
    val l: Int
    val xl: Int
    val xxl: Int
}
"
`;

exports[`android styledictionary can build platform android 5`] = `
"/**
 * ⚠️ DO NOT MODIFY ⚠️
 * this file is auto generated using elements-design-tokens
 *
 * See https://github.com/elementsinteractive/design-tokens for more info
 */
package nl.elements.designsystem

import androidx.compose.material3.Typography
import androidx.compose.ui.text.TextStyle
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.unit.sp

val bodyLarge = TextStyle(
    fontWeight = FontWeight.Normal,
    fontSize = 16.sp,
    letterSpacing = (0.5).sp,
)

val bodyMedium = TextStyle(
    fontWeight = FontWeight.Medium,
    fontSize = 14.sp,
    letterSpacing = (0.2).sp,
)

val bodySmall = TextStyle(
    fontWeight = FontWeight.Normal,
    fontSize = 12.sp,
    letterSpacing = (0.4).sp,
)

val displayLarge = TextStyle(
    fontWeight = FontWeight.Normal,
    fontSize = 57.sp,
    letterSpacing = (-0.2).sp,
)

val displayMedium = TextStyle(
    fontWeight = FontWeight.Normal,
    fontSize = 45.sp,
)

val displaySmall = TextStyle(
    fontWeight = FontWeight.Normal,
    fontSize = 36.sp,
)

val headlineLarge = TextStyle(
    fontWeight = FontWeight.Normal,
    fontSize = 32.sp,
)

val headlineMedium = TextStyle(
    fontWeight = FontWeight.Normal,
    fontSize = 28.sp,
)

val headlineSmall = TextStyle(
    fontWeight = FontWeight.Normal,
    fontSize = 24.sp,
)

val labelLarge = TextStyle(
    fontWeight = FontWeight.Medium,
    fontSize = 14.sp,
    letterSpacing = (0.1).sp,
)

val labelMedium = TextStyle(
    fontWeight = FontWeight.Medium,
    fontSize = 12.sp,
    letterSpacing = (0.5).sp,
)

val labelSmall = TextStyle(
    fontWeight = FontWeight.Medium,
    fontSize = 11.sp,
    letterSpacing = (0.5).sp,
)

val titleLarge = TextStyle(
    fontWeight = FontWeight.Normal,
    fontSize = 22.sp,
)

val titleMedium = TextStyle(
    fontWeight = FontWeight.Medium,
    fontSize = 16.sp,
    letterSpacing = (0.2).sp,
)

val titleSmall = TextStyle(
    fontWeight = FontWeight.Medium,
    fontSize = 14.sp,
    letterSpacing = (0.1).sp,
)

val AppTypography = Typography(
    bodyLarge = bodyLarge,
    bodyMedium = bodyMedium,
    bodySmall = bodySmall,
    displayLarge = displayLarge,
    displayMedium = displayMedium,
    displaySmall = displaySmall,
    headlineLarge = headlineLarge,
    headlineMedium = headlineMedium,
    headlineSmall = headlineSmall,
    labelLarge = labelLarge,
    labelMedium = labelMedium,
    labelSmall = labelSmall,
    titleLarge = titleLarge,
    titleMedium = titleMedium,
    titleSmall = titleSmall,
)"
`;
